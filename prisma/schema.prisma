// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Represents an account associated with a user
model Account {
  id                 Int       @id @default(autoincrement())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?   
  accessToken        String?   
  accessTokenExpires DateTime?
  user               User      @relation(fields: [userId], references: [id])
  @@unique([providerId, providerAccountId])
}

// Represents a user session
model Session {
  id           Int      @id @default(autoincrement())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  user         User     @relation(fields: [userId], references: [id])
}

// Represents a user
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
}

// Represents a verification request
model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

// Represents an order
model Order {
  id        Int      @id @default(autoincrement())
  items     ItemOnOrder[]
  table     Table    @relation(fields: [tableId], references: [id])
  tableId   Int
  invoiceId Int?     @unique
  invoice   Invoice? 
  served    Boolean  @default(false)
  paid      Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

// Represents an item
model Item {
  id        Int      @id @default(autoincrement())
  name      String
  price     Float
  category  String
  img       String?
  orders    ItemOnOrder[]
}

// Represents an item on an order
model ItemOnOrder {
  orderId Int
  itemId  Int
  quantity Int
  order   Order  @relation(fields: [orderId], references: [id])
  item    Item   @relation(fields: [itemId], references: [id])

  @@id([orderId, itemId])
}

// Represents a table
model Table {
  id        Int      @id @default(autoincrement())
  number    Int      @unique
  orders    Order[]
}

// Represents an invoice
model Invoice {
  id        Int      @id @default(autoincrement())
  total     Float
  paid      Boolean  @default(false)
  orderId   Int      @unique
  order     Order    @relation(fields: [orderId], references: [id])
}